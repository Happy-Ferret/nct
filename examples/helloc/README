
nCrux Configuration Tool enabled "Hello C" example project.

This example project demonstartes how nCrux configuration tool
can be leveraged in a C project. This project contains two features
to be turned on or off at compile time.

The generated configuration file ".nconf" can be included in Makefile 
to include necessary sources for compilation based on the feature
selection.


Testing the "Hello C" project
=============================

Use following three instructions to test this project.

1. Configure project settings:

   This displays configuration menu in which you can select features and
   set the greet message from each feature to be printed, if turned on.

 	$ nconf

2. Compile sources:

   The Makefile has rule to generate C header file based on the configuration
   file ".nconf". The nconf tool generates a C header file "src/helloc_nconf.h"
   that can be included in C sources code.

	$ make

3. Run the executable:


	$ ./src/helloc

	helloc v0.1.0

	Hello There! nCrux Configuration Tool.

	Hello from Feature2
	$ 



Contents of configuration file generated by nconf tool
======================================================

$ cat .nconf
#
# Automatically generated file; DO NOT EDIT.
# Hello C Project
#

#
# Package Information
#
NCONF_PKG_NAME="helloc"
NCONF_PKG_VER="0.1.0"
# NCONF_FEATURE1 is not set
NCONF_FEATURE2=y
NCONF_FEATURE2_MESSAGE="Hello from Feature2"
$ 

Header file generation
======================

$ nconf gen -o src/helloc_nconf.h

$ cat src/helloc_nconf.h 
/*
 *
 * Automatically generated file using nconf; DO NOT EDIT.
 *
 */
#define NCONF_PKG_NAME "helloc"
#define NCONF_PKG_VER "0.1.0"
#define NCONF_FEATURE2 1
#define NCONF_FEATURE2_MESSAGE "Hello from Feature2"
$

