.\" Man page generated from reStructuredText.
.
.TH NCT 1 "13 Jun 2016" "0.2.0" "nCrux Configuration Tool"
.SH NAME
nct \- Menu driven tool to configure build settings of a project
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
nct nomenu [\-m|\-\-mode {alldef|allno|allyes|random}] [\-c|\-\-config config_file] [\-i|\-\-input config_input_file]
.sp
nct {menu|menu\-n|menu\-g|menu\-q} [\-c|\-\-config config_file] [\-i|\-\-input config_input_file]
.sp
nct gen [\-c|\-\-config config_file] [\-o|\-\-output output_file]
.sp
nct merge [\-c|\-\-config config_file] [\-f|\-\-fragment fragment_config_file]
.sp
nct help
.SH DESCRIPTION
.sp
This tool is based on kconfig tool available as part of standard Linux kernel sources. This project makes kconfig standalone and usable in any project leveraging intuitive menu based configuration. In addition to that, this tool can generate source code in various high level languages like C, Go, Python, PHP, Perl, JavaScript etc to make the configuration parameters readily usable in terms of key/value pairs. The configuration file can be directly included in a Makefile to achieve conditional compilation. The configuration file can also be included in bash shell script as is. This tool also supports "merge" command to merge partial configuration file into a base configuration file. The nCrux Make Tool (nmt) tool is a great companion with this tool to make the build system ridiculously simple.
.SH OPTIONS
.sp
nomenu  Display no interactive menu and generate or update configuration file based on mode specified.
.sp
menu    Start terminal based menu (classic)
.sp
menu\-n  Start terminal based menu (new)
.sp
menu\-g  Start gtk based menu
.sp
menu\-q  Start Qt based menu
.sp
gen     Generate source code
.sp
merge   Merge given configuration fragment into base configuration file.
.sp
help    Display command usage information.
.INDENT 0.0
.TP
.BI \-m \ mode_str\fP,\fB \ \-\-mode \ mode_str
This option is valid only for "nomenu" sub\-command. Following are the modes supported. The mode "alldef" is assumed if this option is not given.
.INDENT 7.0
.INDENT 3.5
\fBalldef\fP    Select all default values for each configuration element.
.sp
\fBallno\fP     Unselect all boolean and tristate configuration elements.
.sp
\fBallyes\fP    Select all boolean and tristate configuration elements.
.sp
\fBrandom\fP    Randomly select boolean and tristate configuration elements.
.UNINDENT
.UNINDENT
.TP
.BI \-c \ config_file\fP,\fB \ \-\-config \ config_file
File containing current selection of configuration settings. The file ".nct" is assumed if this option is not given. In case if user saves the modified settings, this file gets overwritten with new settings.
.TP
.BI \-i \ config_input_file\fP,\fB \ \-\-input \ config_input_file
Top level configuration input file used for menu interface. The file "nct.in" is assumed if this option is not given.
.TP
.BI \-f \ fragment_config_file\fP,\fB \ \-\-fragment \ fragment_config_file
File containing partial configuration settings that need to be merged into main configuration file provided with option "\-c".
.TP
.BI \-o \ output_file\fP,\fB \ \-\-output \ output_file
File to which generated output needs to be written. File extension of output_file is recognized and appropriate code is generated. Recognized file extensions are:
.INDENT 7.0
.INDENT 3.5
\fBh\fP         C source header file
.sp
\fBxml\fP       XML file
.sp
\fBpl\fP        Perl source file
.sp
\fBpy\fP        Python source file
.sp
\fBgo\fP        Golang source file
.sp
\fBphp\fP       PHP source file
.sp
\fBrb\fP        Ruby source file
.sp
\fBjs\fP        JavaScript source file
.UNINDENT
.UNINDENT
.TP
.B \-h\fP,\fB  \-\-help
Display this command usage.
.UNINDENT
.SH EXAMPLES
.sp
Load configuration settings from .nct file if present and display ncurses\-based
menu based on default configuration input file "nct.in" and write the
changes back to .nct file:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nct menu
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Display ncurses based newer menu, read and write configuration changes to simple.nct:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nct menu\-n \-c simple.nct
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Display Gtk based menu using configuration input file "simple.in", read and write configuration changes to ".nct":
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nct menu\-g \-i simple.in
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Display Qt based menu using input file "simple.in", read and write configuration changes to simple.nct:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nct menu\-q \-c simple.nct \-i simple.in
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Generate C header file based on configuration settings read from ".nct":
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nct gen \-o simple.h
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Generate XML file based on configuration settings read from simple.nct:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nct gen \-c simple.nct \-o simple.xml
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Generate Perl source file based on configuration settings read from ".nct":
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nct gen \-o simple.pl
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Generate Python source file based on configuration settings read from ".nct":
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nct gen \-o simple.py
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Generate Golang source file based on configuration settings read from ".nct":
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nct gen \-o simple.go
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Generate PHP source file based on configuration settings read from simple.nct:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nct gen \-c simple.nct \-o simple.php
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Generate Ruby source file based on configuration settings read from ".nct":
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nct gen \-o simple.rb
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Generate JavaScript source file based on configuration settings read from ".nct":
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nct gen \-o simple.js
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Merge configuration fragments present in other\-feature.conf into ".nct":
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nct merge \-f other\-feature.conf
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Merge configuration fragments present in other\-feature.conf into "simple.nct":
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nct merge \-c simple.conf \-f other\-feature.conf
.ft P
.fi
.UNINDENT
.UNINDENT
.SH SEE ALSO
.sp
nmt(1)
.SH HOMEPAGE
.sp
More information about nct project can be found at <\fI\%http://www.ncrux.com/project/nct/\fP>
.SH AUTHORS
.sp
nct package is developed by nCrux <\fI\%http://www.ncrux.com/\fP>.
.sp
This documentation is done by Aditi <\fI\%aditi@ncrux.com\fP>.
.SH REPORTING BUGS
.sp
You can report bugs at <\fI\%https://github.com/ncrux/nct/issues\fP>
.SH COPYRIGHT
.sp
Copyright Â© 2016 nCrux.
License: GNU GPL version 2.
This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.
.\" Generated by docutils manpage writer.
.
